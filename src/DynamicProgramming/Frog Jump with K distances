A frog wants to climb a staircase with n steps. Given an integer array heights, where heights[i] contains the height of the ith step, and an integer k.
To jump from the ith step to the jth step, the frog requires abs(heights[i] - heights[j]) energy, where abs() denotes the absolute difference. 
The frog can jump from the ith step to any step in the range [i + 1, i + k], provided it exists.
Return the minimum amount of energy required by the frog to go from the 0th step to the (n-1)th step.


class Solution {
    public int frogJump(int[] heights, int k) {
        int n = heights.length;
        int[] dp = new int[n];

        if(n == 1) return 0; if(n == 2) return Math.abs(heights[0]-heights[1]);

        dp[0] = 0; dp[1] = Math.abs(heights[0]-heights[1]);

        for(int i = 2; i < n; i++) {
            int idx = 1;
            int ans = Integer.MAX_VALUE;
            while(idx <= k && i-idx >= 0) {
                int choice = Math.abs(heights[i] - heights[i-idx]) + dp[i-idx];
                ans = Math.min(ans, choice);
                idx++;
            }
            dp[i] = ans;
        }
        return dp[n-1];
    }
}
